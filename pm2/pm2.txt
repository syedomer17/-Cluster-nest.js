âœ… Step 1: Install PM2 Globally
npm install -g pm2

âœ… Step 2: Build Your NestJS Project
PM2 runs the compiled JavaScript, not TypeScript.
npm run build
This creates the compiled files in the dist/ folder.

âœ… Step 3: Start the App with PM2

pm2 start dist/main.js --name nest-app
--name nest-app: gives your app a readable name

dist/main.js: entry point of compiled NestJS app

âœ… Step 4: Enable Cluster Mode with PM2
Let PM2 manage clustering (no need for Nodeâ€™s cluster module):

pm2 start dist/main.js -i max --name nest-clustered
-i max: forks as many instances as CPU cores

PM2 handles load-balancing internally

âœ… No need to manually write cluster.fork() logic if you let PM2 manage clustering.

âœ… Step 5: Monitor Your App

pm2 list        # View all processes
pm2 logs        # View logs
pm2 monit       # Live dashboard

âœ… Step 6: Persist Across Reboots

pm2 startup     # Setup startup script
pm2 save        # Save current process list
âœ… Step 7: Common PM2 Commands
Command	Description
pm2 restart <name>	Restart app
pm2 reload <name>	Zero-downtime reload
pm2 delete <name>	Stop and remove app
pm2 stop <name>	Stop app

ðŸ§  Extra Tip: PM2 Config File
Create an ecosystem config:

pm2 init
Then edit ecosystem.config.js:

module.exports = {
  apps: [
    {
      name: 'nest-app',
      script: 'dist/main.js',
      instances: 'max',
      exec_mode: 'cluster',
    },
  ],
};
Run with:

pm2 start ecosystem.config.js


